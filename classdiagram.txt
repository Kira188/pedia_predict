@startuml
set namespaceSeparator ::

class "pedia_predict::psss::psss_result.dart::PsssResult" {
  +int score
  +int habitType
  +String appBarText
  +Widget build()
  -void _saveResultsToDatabase()
}

"flutter_riverpod::src::consumer.dart::ConsumerWidget" <|-- "pedia_predict::psss::psss_result.dart::PsssResult"

class "pedia_predict::psss::psss_choice.dart::PsssChoice" {
  +dynamic category
  +List<String> frequencyOptions
  +String? selectedFrequency
  +State<PsssChoice> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "pedia_predict::psss::psss_choice.dart::PsssChoice"

class "pedia_predict::psss::psss_choice.dart::_PsssChoiceState" {
  -String? _selectedFrequency
  +void initState()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "pedia_predict::psss::psss_choice.dart::_PsssChoiceState"

class "pedia_predict::psss::psss_habits.dart::PsssHabits" {
  +int habitType
  +ConsumerState<ConsumerStatefulWidget> createState()
}

"flutter_riverpod::src::consumer.dart::ConsumerStatefulWidget" <|-- "pedia_predict::psss::psss_habits.dart::PsssHabits"

class "pedia_predict::psss::psss_habits.dart::_PsssHabitsState" {
  -String _habitTitle
  -dynamic _data
  -List<dynamic> _categoryValues
  -List<String> _categoryNames
  -List<dynamic> _frequencyOptions
  -Function _calculatedScore
  +void initState()
  -StateNotifierProvider<PsssHabitsNotifier, PsssHabitsState> _getProvider()
  -void _openChoiceOverlay()
  -dynamic _savePsssHabits()
  -void _showResultScreen()
  -void _submit()
  +Widget build()
}

"flutter_riverpod::src::consumer.dart::ConsumerState" <|-- "pedia_predict::psss::psss_habits.dart::_PsssHabitsState"

class "pedia_predict::gradient_scaffold.dart::GradientScaffold" {
  +Widget body
  +bool showBackButton
  +String appBarText
  +Widget build()
}

"pedia_predict::gradient_scaffold.dart::GradientScaffold" o-- "flutter::src::widgets::framework.dart::Widget"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "pedia_predict::gradient_scaffold.dart::GradientScaffold"

class "pedia_predict::auth::auth_page.dart::AuthPage" {
  +State<AuthPage> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "pedia_predict::auth::auth_page.dart::AuthPage"

class "pedia_predict::auth::auth_page.dart::_AuthPageState" {
  -GlobalKey<FormState> _form
  -bool _isLogin
  -String _enteredEmail
  -String _enteredPassword
  -String _enteredUsername
  -bool _isAuthenticating
  -bool _isForgotPassword
  -void _submit()
  -void _toggleMode()
  -void _forgotPassword()
  +Widget build()
}

"pedia_predict::auth::auth_page.dart::_AuthPageState" o-- "flutter::src::widgets::framework.dart::GlobalKey<FormState>"
"flutter::src::widgets::framework.dart::State" <|-- "pedia_predict::auth::auth_page.dart::_AuthPageState"

class "pedia_predict::utils::database_helper.dart::DatabaseHelper" {
  {static} -DatabaseHelper _instance
  {static} -Database? _database
  +dynamic database
  -dynamic _initDatabase()
  -dynamic _onCreate()
  +dynamic insertSdcModel()
  +dynamic insertSdcQuestion()
  +dynamic insertRemainingTableQuestion()
  +dynamic deleteStudentById()
  +dynamic getTableData()
  +dynamic getSdcCount()
  +dynamic getLatestSdcId()
  +dynamic exportDatabaseToExcel()
}

"pedia_predict::utils::database_helper.dart::DatabaseHelper" o-- "pedia_predict::utils::database_helper.dart::DatabaseHelper"
"pedia_predict::utils::database_helper.dart::DatabaseHelper" o-- "sqflite_common::sqlite_api.dart::Database"

class "pedia_predict::utils::firebase_options.dart::DefaultFirebaseOptions" {
  {static} +FirebaseOptions android
  {static} +FirebaseOptions ios
  {static} +FirebaseOptions currentPlatform
}

"pedia_predict::utils::firebase_options.dart::DefaultFirebaseOptions" o-- "firebase_core_platform_interface::firebase_core_platform_interface.dart::FirebaseOptions"

class "pedia_predict::models::questions_model.dart::QuizQuestion" {
  +String text
  +List<String> dropdownAnswers
  +bool textAnswer
  +List<QuizQuestion> subQuestions
}

class "pedia_predict::models::sdc_model.dart::SdcModel" {
  +int? id
  +double weight
  +double height
  +DateTime age
  +String gender
  +String schoolName
  +String fullName
  +String classSection
  +String address
  +double bmi
  +String riskFactor
  +String district
  +String taluk
  +Map<String, dynamic> toMap()
}

class "pedia_predict::models::psss_data.dart::EatingData" {
  +Map<EatingCategory, String> choices
  +int calculatedEatingScore
}

class "pedia_predict::models::psss_data.dart::PhysicalData" {
  +Map<PhysicalCategory, String> choices
  +int calculatedPhysicalScore
}

class "pedia_predict::models::psss_data.dart::SedentaryData" {
  +Map<SedentaryCategory, String> choices
  +int calculatedSedentaryScore
}

class "pedia_predict::models::psss_data.dart::SedentaryDataTwo" {
  +Map<SedentaryCategoryTwo, String> choices
  +int calculatedSedentaryScore
}

class "pedia_predict::models::psss_data.dart::SleepingData" {
  +Map<SleepingCategory, String> choices
  +int calculatedSleepingScore
}

class "pedia_predict::models::psss_data.dart::EatingCategory" {
  +int index
  {static} +List<EatingCategory> values
  {static} +EatingCategory cereals
  {static} +EatingCategory pulsesAndLegumes
  {static} +EatingCategory vegetables
  {static} +EatingCategory fruits
  {static} +EatingCategory milkAndMilkProducts
  {static} +EatingCategory nonVegetarian
  {static} +EatingCategory snacks
  {static} +EatingCategory sweets
  {static} +EatingCategory beverages
  {static} +EatingCategory others
}

"pedia_predict::models::psss_data.dart::EatingCategory" o-- "pedia_predict::models::psss_data.dart::EatingCategory"
"dart::core::Enum" <|-- "pedia_predict::models::psss_data.dart::EatingCategory"

class "pedia_predict::models::psss_data.dart::PhysicalCategory" {
  +int index
  {static} +List<PhysicalCategory> values
  {static} +PhysicalCategory dance
  {static} +PhysicalCategory swimming
  {static} +PhysicalCategory yoga
  {static} +PhysicalCategory exercise
  {static} +PhysicalCategory indoor
  {static} +PhysicalCategory outdoor
  {static} +PhysicalCategory play
  {static} +PhysicalCategory self
  {static} +PhysicalCategory walking
}

"pedia_predict::models::psss_data.dart::PhysicalCategory" o-- "pedia_predict::models::psss_data.dart::PhysicalCategory"
"dart::core::Enum" <|-- "pedia_predict::models::psss_data.dart::PhysicalCategory"

class "pedia_predict::models::psss_data.dart::SedentaryCategory" {
  +int index
  {static} +List<SedentaryCategory> values
  {static} +SedentaryCategory tv
  {static} +SedentaryCategory mobile
  {static} +SedentaryCategory readingSchool
  {static} +SedentaryCategory readingNonSchool
  {static} +SedentaryCategory indoor
  {static} +SedentaryCategory outdoor
  {static} +SedentaryCategory tuition
}

"pedia_predict::models::psss_data.dart::SedentaryCategory" o-- "pedia_predict::models::psss_data.dart::SedentaryCategory"
"dart::core::Enum" <|-- "pedia_predict::models::psss_data.dart::SedentaryCategory"

class "pedia_predict::models::psss_data.dart::SedentaryCategoryTwo" {
  +int index
  {static} +List<SedentaryCategoryTwo> values
  {static} +SedentaryCategoryTwo walk
  {static} +SedentaryCategoryTwo run
  {static} +SedentaryCategoryTwo sports
  {static} +SedentaryCategoryTwo attention
  {static} +SedentaryCategoryTwo forget
  {static} +SedentaryCategoryTwo studies
  {static} +SedentaryCategoryTwo lonely
  {static} +SedentaryCategoryTwo weight
}

"pedia_predict::models::psss_data.dart::SedentaryCategoryTwo" o-- "pedia_predict::models::psss_data.dart::SedentaryCategoryTwo"
"dart::core::Enum" <|-- "pedia_predict::models::psss_data.dart::SedentaryCategoryTwo"

class "pedia_predict::models::psss_data.dart::SleepingCategory" {
  +int index
  {static} +List<SleepingCategory> values
  {static} +SleepingCategory falling
  {static} +SleepingCategory wakeUp
  {static} +SleepingCategory noise
  {static} +SleepingCategory wakeUp2
  {static} +SleepingCategory classes
  {static} +SleepingCategory headache
  {static} +SleepingCategory irritated
  {static} +SleepingCategory studies
  {static} +SleepingCategory forget
}

"pedia_predict::models::psss_data.dart::SleepingCategory" o-- "pedia_predict::models::psss_data.dart::SleepingCategory"
"dart::core::Enum" <|-- "pedia_predict::models::psss_data.dart::SleepingCategory"

class "pedia_predict::models::eating_model.dart::EatingModel" {
  +Map<Category, Map<int, String>> choices
  +Set<Category> categoriesWithTextInput
  +int calculatedEatingScore
}

class "pedia_predict::models::eating_model.dart::Category" {
  +int index
  {static} +List<Category> values
  {static} +Category cereals
  {static} +Category pulsesAndLegumes
  {static} +Category vegetables
  {static} +Category fruits
  {static} +Category milkAndMilkProducts
  {static} +Category nonVegetarian
  {static} +Category snacks
  {static} +Category sweets
  {static} +Category beverages
  {static} +Category others
}

"pedia_predict::models::eating_model.dart::Category" o-- "pedia_predict::models::eating_model.dart::Category"
"dart::core::Enum" <|-- "pedia_predict::models::eating_model.dart::Category"

class "pedia_predict::questions_screen.dart::QuestionsScreen" {
  +int startIndex
  +int endIndex
  +String pageTitle
  +ConsumerState<ConsumerStatefulWidget> createState()
}

"flutter_riverpod::src::consumer.dart::ConsumerStatefulWidget" <|-- "pedia_predict::questions_screen.dart::QuestionsScreen"

class "pedia_predict::questions_screen.dart::_QuestionsScreenState" {
  +Set<String> expandedQuestions
  +void initState()
  +dynamic initializeAnswers()
  +void handleDropdownAnswerChange()
  +dynamic saveAnswers()
  +Widget determineNextPage()
  +Widget buildQuestion()
  +void dispose()
  +Widget build()
}

"flutter_riverpod::src::consumer.dart::ConsumerState" <|-- "pedia_predict::questions_screen.dart::_QuestionsScreenState"

class "pedia_predict::delete_student.dart::DeleteStudent" {
  +ConsumerState<ConsumerStatefulWidget> createState()
}

"flutter_riverpod::src::consumer.dart::ConsumerStatefulWidget" <|-- "pedia_predict::delete_student.dart::DeleteStudent"

class "pedia_predict::delete_student.dart::_DeleteStudentState" {
  -dynamic _fetchStudents()
  -void _onRemoveStudent()
  -dynamic _confirmDelete()
  +Widget build()
}

"flutter_riverpod::src::consumer.dart::ConsumerState" <|-- "pedia_predict::delete_student.dart::_DeleteStudentState"

class "pedia_predict::main.dart::MyApp" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "pedia_predict::main.dart::MyApp"

class "pedia_predict::main.dart::AuthWrapper" {
  +Widget build()
}

"flutter_riverpod::src::consumer.dart::ConsumerWidget" <|-- "pedia_predict::main.dart::AuthWrapper"

class "pedia_predict::image_question.dart::ImageQuestion" {
  +int ver
  +ConsumerState<ConsumerStatefulWidget> createState()
}

"flutter_riverpod::src::consumer.dart::ConsumerStatefulWidget" <|-- "pedia_predict::image_question.dart::ImageQuestion"

class "pedia_predict::image_question.dart::_ImageQuestionState" {
  +String questionText
  +void initState()
  -dynamic _submitRating()
  +Widget build()
}

"flutter_riverpod::src::consumer.dart::ConsumerState" <|-- "pedia_predict::image_question.dart::_ImageQuestionState"

class "pedia_predict::providers.dart::QuestionState" {
  +Map<String, String> answers
  +Map<String, TextEditingController> textControllers
}

class "pedia_predict::providers.dart::QuestionNotifier" {
  +void setAnswer()
  +TextEditingController? getController()
  +void setController()
  +void clearAnswers()
  +void disposeAll()
}

"state_notifier::state_notifier.dart::StateNotifier" <|-- "pedia_predict::providers.dart::QuestionNotifier"

class "pedia_predict::providers.dart::PsssHabitsState" {
  +Map<dynamic, String> choices
  +PsssHabitsState copyWith()
}

class "pedia_predict::providers.dart::PsssHabitsNotifier" {
  +void setChoice()
  +void disposeAll()
}

"state_notifier::state_notifier.dart::StateNotifier" <|-- "pedia_predict::providers.dart::PsssHabitsNotifier"

class "pedia_predict::providers.dart::ImageSelectionState" {
  +int? selectedRating
}

class "pedia_predict::providers.dart::ImageSelectionNotifier" {
  +void setSelectedRating()
  +void disposeAll()
}

"state_notifier::state_notifier.dart::StateNotifier" <|-- "pedia_predict::providers.dart::ImageSelectionNotifier"

class "pedia_predict::providers.dart::ProviderManager" {
  {static} +void resetAllProviders()
}

class "pedia_predict::home_page.dart::HomePage" {
  +Widget build()
}

"flutter_riverpod::src::consumer.dart::ConsumerWidget" <|-- "pedia_predict::home_page.dart::HomePage"

class "pedia_predict::sdc::sdc_page.dart::SdcPage" {
  +ConsumerState<ConsumerStatefulWidget> createState()
}

"flutter_riverpod::src::consumer.dart::ConsumerStatefulWidget" <|-- "pedia_predict::sdc::sdc_page.dart::SdcPage"

class "pedia_predict::sdc::sdc_page.dart::_SdcPageState" {
  -GlobalKey<FormState> _formKey
  -TextEditingController _weightController
  -TextEditingController _heightController
  -TextEditingController _ageController
  -TextEditingController _schoolNameController
  -TextEditingController _fullNameController
  -TextEditingController _classSectionController
  -TextEditingController _addressController
  -TextEditingController _talukController
  -TextEditingController _districtController
  -String? _gender
  -DateTime? _selectedDate
  -List<SdcModel> _sdcDataList
  +void initState()
  -int _calculateAgeInMonths()
  -String _calculateRisk()
  -void _addSdcData()
  -void _presentDatepicker()
  +void dispose()
  +Widget build()
  -Widget _buildTextField()
}

"pedia_predict::sdc::sdc_page.dart::_SdcPageState" o-- "flutter::src::widgets::framework.dart::GlobalKey<FormState>"
"pedia_predict::sdc::sdc_page.dart::_SdcPageState" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"flutter_riverpod::src::consumer.dart::ConsumerState" <|-- "pedia_predict::sdc::sdc_page.dart::_SdcPageState"

class "pedia_predict::data::sdc_data.dart::SdcData" {
  {static} +Map<int, List<double>> maleMap
  {static} +Map<int, List<double>> femaleMap
  {static} -Map<int, List<double>> _parseCsvToMap()
}


@enduml